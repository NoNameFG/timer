{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","time","setTime","timerStatus","setTimerStatus","startStopButton","useRef","pauseButton","resetButton","stylizeStr","val","disablePauseButton","value","current","disabled","useEffect","flag","startStopClick","fromEvent","subscribe","pauseClick","pauseDoubleClick","pipe","buffer","debounceTime","map","arr","length","filter","x","event","resetClick","unsubscribe","seconds","timer","interval","className","Math","floor","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA4GeA,MAvGf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACLC,EADK,KACCC,EADD,OAE2BF,oBAAS,GAFpC,mBAELG,EAFK,KAEQC,EAFR,KAIPC,EAAkBC,iBAAO,MACzBC,EAAcD,iBAAO,MACrBE,EAAcF,iBAAO,MAIrBG,EAAa,SAAAC,GACjB,OAAOA,EAAM,EAAIA,EAAM,IAAMA,GAGzBC,EAAqB,SAAAC,GACzBL,EAAYM,QAAQC,SAAWF,GAgEjC,OA7DAG,qBAAU,WACR,IAAIC,EAAOb,EAELc,EAAiBC,YAAUb,EAAgBQ,QAAS,SAASM,WAAU,WACzEf,GAAgBY,GACbA,GACDd,EAAQ,GACRS,GAAmB,IAEnBA,GAAmB,GAErBK,GAAQA,KAKNI,EAAaF,YAAUX,EAAYM,QAAS,SAE5CQ,EAAmBD,EAAWE,KAClCC,YAAOH,EAAWE,KAAKE,YAAa,OACpCC,aAAI,SAAAC,GAAG,OAAIA,EAAIC,UACfC,aAAO,SAAAC,GAAC,OAAIA,EAAI,MAEjBV,WAAU,SAAAW,GACP1B,GAAgBY,GAChBA,GAAQA,EACRL,GAAmB,MAKjBoB,EAAab,YAAUV,EAAYK,QAAS,SAASM,WAAU,WACjEf,GAAe,GACfY,GAAO,EACPd,EAAQ,GACRS,GAAmB,MAIvB,OAAO,WACLM,EAAee,cACfX,EAAiBW,cACjBD,EAAWC,iBAEZ,IAEHjB,qBAAU,WACR,GAAGZ,EAAY,CACb,IAAI8B,EAAUhC,GAAc,EAEtBiC,EAAQC,YAAS,KAAMhB,WAAU,WAErCjB,EADA+B,GAAW,QAIb,OAAO,WACLC,EAAMF,kBAGT,CAAC7B,IAGF,qBAAKiC,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,mCAGQ3B,EAAW4B,KAAKC,MAAOrC,EAAI,MAAL,OAH9B,4BAIQQ,EAAW4B,KAAKC,MAAOrC,EAAI,KAAL,MAJ9B,4BAKQQ,EAAW4B,KAAKC,MAAOrC,EAAI,IAAkB,MALrD,oBASA,sBAAKmC,UAAU,gBAAf,UACE,wBAAQG,IAAKlC,EAAiB+B,UAAU,uBAAxC,SACIjC,EAAc,OAAS,UAE3B,wBAAQoC,IAAKhC,EAAa6B,UAAU,uBAAuBtB,UAAQ,EAAnE,mBACA,wBAAQyB,IAAK/B,EAAa4B,UAAU,uBAApC,4BCzFKI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6fd1759c.chunk.js","sourcesContent":["import './App.css'\nimport { fromEvent, interval } from 'rxjs'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { map, buffer, filter, debounceTime } from 'rxjs/operators'\n\nfunction App() {\n  const [ time, setTime ] = useState(0)\n  const [ timerStatus, setTimerStatus ] = useState(false)\n\n  const startStopButton = useRef(null)\n  const pauseButton = useRef(null)\n  const resetButton = useRef(null)\n\n\n\n  const stylizeStr = val => {\n    return val > 9 ? val : '0' + val\n  }\n\n  const disablePauseButton = value => {\n    pauseButton.current.disabled = value\n  }\n\n  useEffect(() => {\n    let flag = timerStatus\n\n    const startStopClick = fromEvent(startStopButton.current, 'click').subscribe(() =>{\n        setTimerStatus(!flag)\n        if(flag){\n          setTime(0)\n          disablePauseButton(true)\n        } else {\n          disablePauseButton(false)\n        }\n        flag = !flag\n      }\n    )\n\n\n    const pauseClick = fromEvent(pauseButton.current, 'click')\n\n    const pauseDoubleClick = pauseClick.pipe(\n      buffer(pauseClick.pipe(debounceTime(300))),\n      map(arr => arr.length),\n      filter(x => x > 1)\n    )\n    .subscribe(event =>{\n        setTimerStatus(!flag)\n        flag = !flag\n        disablePauseButton(true)\n      }\n    )\n\n\n    const resetClick = fromEvent(resetButton.current, 'click').subscribe(() =>{\n        setTimerStatus(false)\n        flag = false\n        setTime(0)\n        disablePauseButton(true)\n      }\n    )\n\n    return () => {\n      startStopClick.unsubscribe()\n      pauseDoubleClick.unsubscribe()\n      resetClick.unsubscribe()\n    }\n  }, [])\n\n  useEffect(() => {\n    if(timerStatus){\n      let seconds = time ? time : 0\n\n      const timer = interval(1000).subscribe(() => {\n        seconds += 1000\n        setTime(seconds)\n      })\n\n      return () => {\n        timer.unsubscribe()\n      }\n    }\n  }, [timerStatus])\n\n  return (\n    <div className=\"App\">\n      <div className=\"timer\">\n        <div className=\"timer_face\">\n          {\n            `\n              ${stylizeStr(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))}:\n              ${stylizeStr(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)))}:\n              ${stylizeStr(Math.floor((time % (1000 * 60)) / 1000))}\n            `\n          }\n        </div>\n        <div className=\"timer_control\">\n          <button ref={startStopButton} className=\"timer_control--start\">\n            { timerStatus ? 'Stop' : 'Start' }\n          </button>\n          <button ref={pauseButton} className=\"timer_control--pause\" disabled>Pause</button>\n          <button ref={resetButton} className=\"timer_control--reset\">Reset</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}